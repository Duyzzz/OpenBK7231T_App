name: Build App
on:
  push:
    branches:
      - '**'
  pull_request:
    branches: 
      - '**'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  APP_NAME: ${{ github.event.repository.name }}

jobs:
  refs:
    name: Prepare CI Environment
    runs-on: ubuntu-22.04
    outputs:
      sha_short: ${{ steps.refs.outputs.sha_short }}
      short_ref: ${{ steps.refs.outputs.short_ref }}
      version: ${{ steps.refs.outputs.version }}
      new_release: ${{ steps.refs.outputs.new_release }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v4
      - name: Update SDKs if required
        run: make update-submodules
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          semantic_version: 21
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            conventional-changelog-conventionalcommits@7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: refs
        run: |
          export BRANCH=${GITHUB_REF#refs/*/}
          echo "branch: ${BRANCH}"
          export BRANCHTRANSLATED=$(echo ${BRANCH} | tr '/' '_')
          echo "short_ref: ${BRANCHTRANSLATED}"
          export VERSION=""
          if ${{ steps.semantic.outputs.new_release_published == 'true' }}; then
            export VERSION=${{ steps.semantic.outputs.new_release_version }}
          else
            export VERSION=${BRANCHTRANSLATED}_$(git rev-parse --short=12 HEAD)
          fi
          echo "new_release=${{ steps.semantic.outputs.new_release_published }}" >> $GITHUB_OUTPUT
          echo "short_ref=${BRANCHTRANSLATED}" >> $GITHUB_OUTPUT
          echo "sha_short=SHA-$(git rev-parse --short=12 HEAD)" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
  build:
    name: Build
    needs: refs
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # default for all platforms
          # - platform: OpenBK7231T
          #   variant: default
          # - platform: OpenBK7231N
          #   variant: default
          # - platform: OpenXR809
          #   variant: default
          # - platform: OpenXR806
          #   variant: default
          # - platform: OpenXR872
          #   variant: default
          # - platform: OpenBL602
          #   variant: default
          # - platform: OpenW800
          #   variant: default
          # - platform: OpenW600
          #   variant: default
          # - platform: OpenLN882H
          #   variant: default
          # - platform: OpenTR6260
          #   variant: default
          # - platform: OpenRTL8710A
          #   variant: default
          # - platform: OpenRTL8710B
          #   variant: default
          # - platform: OpenRTL87X0C
          #   variant: default
          # - platform: OpenRTL8720D
          #   variant: default
          # - platform: OpenECR6600
          #   variant: default

          # extras for BK7231T
          # - platform: OpenBK7231T
          #   variant: berry
          # - platform: OpenBK7231T
          #   variant: tuyaMCU
          # - platform: OpenBK7231T
          #   variant: powerMetering
          # - platform: OpenBK7231T
          #   variant: irRemoteESP
          # - platform: OpenBK7231T
          #   variant: sensors

          # extras for BK7231N
          # - platform: OpenBK7231N
          #   variant: berry
          # - platform: OpenBK7231N
          #   variant: tuyaMCU
          # - platform: OpenBK7231N
          #   variant: powerMetering
          # - platform: OpenBK7231N
          #   variant: irRemoteESP
          # - platform: OpenBK7231N
          #   variant: sensors

          # extras for BK7238
          - platform: OpenBK7238
            variant: irRemoteESP
            
          # - platform: OpenBL602
          #   variant: berry
          #- platform: OpenBL602
          #  variant: irRemoteESP
    steps:
      - name: Source checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get -y install libc6-i386 make cmake
          pip3 install pycryptodomex
          pip3 install configobj
          pip3 install toml
          pip3 install fdt
      - run: ls -la
      - name: Run make
        run: make APP_VERSION=${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }} APP_NAME=${{ matrix.platform }} VARIANT="${{ matrix.variant }}" ${{ matrix.platform }}
      - name: Save build assets
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_${{ needs.refs.outputs.version }}_${{ matrix.platform }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}
          path: |
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_UA_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_UG_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_QIO_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/OpenBK7231M_QIO_${{ needs.refs.outputs.version }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.rbl
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.img
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.fls
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}_ota.img
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}_gz.img
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}_OTA.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}_OTA.bin.xz
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}_OTA.bin.xz.ota
          if-no-files-found: warn

  build_beken:
    name: Build beken alt
    needs: refs
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # default for all platforms
          # - platform: OpenBK7231N_ALT
          #   variant: default
          # - platform: OpenBK7231T_ALT
          #   variant: default
          # - platform: OpenBK7231U
          #   variant: default
          - platform: OpenBK7238
            variant: default
          # - platform: OpenBK7252
          #   variant: default
          # - platform: OpenBK7252N
          #   variant: default
          
          - platform: OpenBK7238
            variant: berry
            
    steps:
      - name: Source checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get -y install libc6-i386 make
          pip3 install pycryptodomex
          pip3 install configobj
          pip3 install toml
          pip3 install fdt
      - run: ls -la
      - name: Run make
        run: make APP_VERSION=${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }} APP_NAME=${{ matrix.platform }} VARIANT="${{ matrix.variant }}" ${{ matrix.platform }}
      - name: Save build assets
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_${{ needs.refs.outputs.version }}_${{ matrix.platform }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}
          path: |
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_UA_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_UG_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_QIO_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/OpenBK7231M_ALT_QIO_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.rbl
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_Tuya_QIO_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
            output/${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}/${{ matrix.platform }}_Tuya_UA_${{ needs.refs.outputs.version }}${{ matrix.variant != 'default' && '_' || '' }}${{ matrix.variant != 'default' && matrix.variant || '' }}.bin
          if-no-files-found: warn

  merge:
    name: Merge Artifacts
    runs-on: ubuntu-22.04
    needs: [refs, build, build2, build_idf, build_beken, build_8266, build_txw81x]
    #if: always() && needs.refs.outputs.new_release == 'true' && (github.ref == 'refs/heads/main' || github.ref_name == 'alpha')
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ env.APP_NAME }}_${{ needs.refs.outputs.version }}
          #delete-merged: true

  release:
    name: Semantic Release Images and Artifacts
    runs-on: ubuntu-22.04
    needs: [merge, refs]
    if: always() && needs.refs.outputs.new_release == 'true' && (github.ref == 'refs/heads/main' || github.ref_name == 'alpha')
    steps:
      - name: Source checkout
        uses: actions/checkout@v4
      - name: Fetch build assets
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}_${{ needs.refs.outputs.version }}
          path: output/${{ needs.refs.outputs.version }}
      - name: Run Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: false
          semantic_version: 21
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            conventional-changelog-conventionalcommits@7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Echo Semantic Release Versions
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}
